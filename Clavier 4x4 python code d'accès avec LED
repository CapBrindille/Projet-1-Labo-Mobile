import RPi.GPIO as GPIO
import time

# Définition des broches GPIO utilisées
LIGNES = [6, 13, 19, 26]  # GPIO des lignes
COLONNES = [12, 16, 20, 21]  # GPIO des colonnes

# Broches des LED
LED_JAUNE = 17
LED_ROUGE = 27
LED_VERTE = 22

# Code d'accès défini
CODE_CORRECT = "1234"
code_saisi = ""

# Mappage des touches
TOUCHES = [
    ['1', '2', '3', 'A'],
    ['4', '5', '6', 'B'],
    ['7', '8', '9', 'C'],
    ['*', '0', '#', 'D']
]

# Configuration des GPIO
GPIO.setmode(GPIO.BCM)

# Configuration des broches lignes en entrées avec pull-up
for ligne in LIGNES:
    GPIO.setup(ligne, GPIO.IN, pull_up_down=GPIO.PUD_UP)

# Configuration des broches colonnes en sorties
for colonne in COLONNES:
    GPIO.setup(colonne, GPIO.OUT)
    GPIO.output(colonne, 1)  # Colonnes à l'état haut

# Configuration des LED en sorties
GPIO.setup(LED_JAUNE, GPIO.OUT)
GPIO.setup(LED_ROUGE, GPIO.OUT)
GPIO.setup(LED_VERTE, GPIO.OUT)

# Éteindre toutes les LED au démarrage
GPIO.output(LED_JAUNE, 0)
GPIO.output(LED_ROUGE, 0)
GPIO.output(LED_VERTE, 0)

def lire_clavier():
    """Lit les touches pressées sur le clavier matriciel"""
    global code_saisi
    for c in range(4):  # Balayage des colonnes
        GPIO.output(COLONNES[c], 0)  # Active la colonne
        for l in range(4):  # Vérifie chaque ligne
            if GPIO.input(LIGNES[l]) == 0:  # Si la ligne passe à LOW, touche pressée
                GPIO.output(LED_JAUNE, 1)  # Allume la LED jaune pour indiquer la saisie
                touche = TOUCHES[l][c]
                print("Touche pressée :", touche)

                if touche == "#":  # Validation du code
                    verifier_code()
                elif touche == "*":  # Réinitialisation
                    code_saisi = ""
                    print("Code réinitialisé")
                else:
                    code_saisi += touche

                while GPIO.input(LIGNES[l]) == 0:  # Attente du relâchement
                    time.sleep(0.1)

        GPIO.output(COLONNES[c], 1)  # Désactive la colonne

def verifier_code():
    """Vérifie si le code saisi est correct"""
    global code_saisi
    GPIO.output(LED_JAUNE, 0)  # Éteint la LED jaune après saisie
    if code_saisi == CODE_CORRECT:
        print("✅ Code correct !")
        GPIO.output(LED_VERTE, 1)  # Allume la LED verte
        time.sleep(2)
        GPIO.output(LED_VERTE, 0)  # Éteint la LED verte
    else:
        print("❌ Code incorrect !")
        GPIO.output(LED_ROUGE, 1)  # Allume la LED rouge
        time.sleep(2)
        GPIO.output(LED_ROUGE, 0)  # Éteint la LED rouge

    code_saisi = ""  # Réinitialiser le code après vérification

# Boucle principale
try:
    print("Entrez le code et appuyez sur # pour valider")
    while True:
        lire_clavier()
        time.sleep(0.1)  # Petite pause pour éviter les rebonds

except KeyboardInterrupt:
    print("\nArrêt du programme.")
    GPIO.cleanup()  # Nettoyage des GPIO
